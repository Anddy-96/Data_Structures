#include <stdio.h>
#include <stdlib.h>
 struct node
 {
  int x;
  struct node *y;
 };
 void Choose(struct node *h);
 struct node *n = NULL;
 struct node *l = NULL;
 struct node *h = NULL;

 void printList(struct node *a)
 {
   printf("Your list:\n");
   while(a != NULL)
   {
     printf("%d\n",a->x);
     a = a->y;
   }
   char b;
   printf("you want to continue y/n :\n");
   scanf("%s",&b);
   if (b == 'y')
   {
      Choose(h);
   }
   else
   {
      printf("Thank you!\n");
   }
 }
  void Addatfirst(int x, struct node **h)
 {
   struct node *nn = (struct node*)malloc(sizeof(struct node));
  nn->x = x;
  nn->y = *h;
  *h = nn;
 }
 void Addatlast(int x, struct node **l)
 {
   struct node *nn = (struct node*)malloc(sizeof(struct node));
   nn->x = x;
   nn->y = NULL;
   (*l)->y = nn;
   *l = nn;
 }
  void Choose(struct node *h)
 {
   printf("\nSelect the operations:\n");
   printf("\t1.Add at Last.\n\t2.Add at Beginning.\n\t3.Add at particular index first.\n\t5.Remove last.\n\t6.Remove First.\n\t7.Remove at particular index\n\t8.Remove value.\n\t9.Get Index of particular value\n");
   int a;
   int b;
   scanf("%d",&a);
   switch(a)
   {
     case 1:
      printf("Enter the element you want to add:\n");
      scanf("%d",&b);
      Addatlast(b,&l);
      printList(h);
      break;
    case 2:
      printf("Enter the element you want to add:\n");
      scanf("%d",&b);
      Addatfirst(b,&h);
      printList(h);
      break;
    case 3:
      break;
    case 4:
      break;
   }
   
 }
int main(void) {
  int r;
  l = (struct node*)malloc(sizeof(struct node));
  h = (struct node*)malloc(sizeof(struct node));
  printf("Select:\n\t1.Use Default Link List\n\t2.Make your own Link List\n");
  scanf("%d",&r);
  if(r == 1)
  {
    h->x = 9;
    l->x = 10;
    h->y = l;
    l->y = NULL;
    Addatfirst(5,&h);
    Addatlast(11,&l);
    printf("This is your default link List:\n");
    printList(h);
  }
  else
  {
    printf("Enter the number of nodes you want in linklist:\n");
    int i,b;
    scanf("%d",&b);
    n = (struct node *)malloc(b * sizeof(struct node));
    int z;
    for(i=0;i<b;i++)
    {
      printf("Enter node %d value:\n",i+1);
      scanf(" %d", &z);
      (n+i)->x = z;
      if(i>0)
      {
        (n+i-1)->y = (n+i); 
      }
    }
    (n+b-1)->y = NULL;
    l = (n+b-1);
    h->x = n->x;
    if(b == 1)
    {
      h->y = NULL;
    }
    else
    {
      h->y = n+1;
    }
    printf("\nDisplying your link list:\n");
    printList(h);
  }
  return 0;
}
